cmake_minimum_required(VERSION 3.0)
project(ici LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 11)
add_executable(ici
  etc/main.cc
  alloc.cc
  aplfuncs.cc
  archiver.cc
  arith.cc
  array.cc
  buf.cc
  call.cc
  catcher.cc
  cfunc.cc
  cfunco.cc
  channel.cc
  compile.cc
  conf.cc
  control.cc
  crc.cc
  crc32c.cc
  debug.cc
  debugger.cc
  error.cc
  events.cc
  exec.cc
  exerror.cc
  file.cc
  findpath.cc
  float.cc
  forall.cc
  ftype.cc
  func.cc
  handle.cc
  icimain.cc
  init.cc
  int.cc
  lex.cc
  load.cc
  map.cc
  mark.cc
  mem.cc
  method.cc
  mkvar.cc
  net.cc
  null.cc
  object.cc
  oofuncs.cc
  op.cc
  parse.cc
  pc.cc
  pcre.cc
  profile.cc
  ptr.cc
  refuncs.cc
  regexp.cc
  repl.cc
  set.cc
  sfile.cc
  signals.cc
  smash.cc
  src.cc
  sstring.cc
  string.cc
  strtol.cc
  study.cc
  sys.cc
  syserr.cc
  thread.cc
  type.cc
  types.cc
  unary.cc
  uninit.cc
  win32err.cc
  win32timezone.cc
  alloc.h
  archiver.h
  array.h
  binop.h
  buf.h
  catcher.h
  cfunc.h
  channel.h
  chartables.i
  debugger.h
  error.h
  exec.h
  file.h
  float.h
  forall.h
  ftype.h
  func.h
  fwd.h
  handle.h
  icistr-setup.h
  int.h
  internal.h
  load-w32.h
  map.h
  mark.h
  mem.h
  method.h
  null.h
  object.h
  op.h
  parse.h
  pc.h
  pcre.h
  primes.h
  profile.h
  ptr.h
  re.h
  repl.h
  set.h
  src.h
  sstring.h
  str.h
  type.h
  types.h
  wrap.h)

if("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Linux")
target_link_libraries(ici PUBLIC -ldl -lpthread)
endif()
