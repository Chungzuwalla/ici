PREFIX		= /usr/local
PROG    	= ici
CC      	= @echo CC $< ; cc -pipe -g
LIBS    	= -framework Foundation
OPTIM		?= -Ofast -Os
#-flto
COPT		?= $(OPTIM)
DEBUG		?= -DNDEBUG
CFLAGS		= -Wall -I. -Imacosx $(DEBUG) $(COPT)
PROG_CFLAGS	= $(CFLAGS)
MKDEP_CFLAGS	= $(BASE_CFLAGS)

LDFLAGS		= -g $(COPT)

PCH		= fwd.h
GCH		= $(PCH).gch

MAN1	= doc/man1/ici.1\
	  doc/man1/icifuncs.1\
	  doc/man1/icioo.1\
	  doc/man1/iciops.1\
	  doc/man1/icire.1\
	  doc/man1/icistmt.1\
	  doc/man1/icitypes.1

BINDIR  = $(PREFIX)/bin
MANDIR  = $(PREFIX)/man/man1
INCDIR	= $(PREFIX)/include
LIBDIR	= $(PREFIX)/lib
ICILIBDIR = $(LIBDIR)/ici4
DOCDIR	= $(PREFIX)/share/doc

INSTALL = install -c

#
# Interpreter object files
#
OBJS    =                                                       \
	alloc.o aplfuncs.o archive.o arith.o array.o            \
	call.o catch.o cfunc.o cfunco.o clib.o                  \
	compile.o conf.o control.o crc.o events.o exec.o        \
	error.o exerror.o file.o findpath.o                     \
	float.o forall.o                                        \
        hash.o                                                  \
	func.o handle.o icimain.o init.o int.o                  \
	lex.o load.o                                            \
	main.o mark.o mem.o method.o                            \
	mkvar.o null.o                                          \
	object.o oofuncs.o op.o                                 \
        parse.o pc.o ptr.o                                      \
        refuncs.o regexp.o restore.o				\
        set.o sfile.o                  		                \
	save.o signals.o smash.o src.o string.o sstring.o       \
	struct.o syserr.o                                       \
	thread.o trace.o unary.o uninit.o                       \
	buf.o strtol.o                                          \
	idb.o idb2.o profile.o

OSXOBJS=semaphore.o

PCREOBJS=\
	study.o maketables.o pcre.o

ALL_OBJS = $(OBJS) $(PCREOBJS) $(OSXOBJS)

all: $(PROG) ici.h

$(PROG): $(ALL_OBJS)
	@echo LD $@; cc $(LDFLAGS) -o $@ $(ALL_OBJS) $(LIBS)

$(ALL_OBJS) : $(GCH)

pch : $(GCH)

$(GCH) : $(PCH)
	$(CC) $(CFLAGS) $(PCH)

study.o : pcre/study.c
	$(CC) -c -o $@ $(CFLAGS) pcre/study.c

maketables.o    : pcre/maketables.c
	$(CC) -c -o $@ $(CFLAGS) pcre/maketables.c

pcre.o  : pcre/pcre.c
	$(CC) -c -o $@ $(CFLAGS) pcre/pcre.c

semaphore.o : macosx/semaphore.c
	$(CC) -c -o $@ $(CFLAGS) macosx/semaphore.c

# Headers that are potentially used in module writing are made public
ICIHDRS= ici.h icistr-setup.h

# Useful public documentation
DOCS= doc/ici.pdf

ici.h: $(PROG)
	ICIPATH=. ./$(PROG) mk-ici-h.ici conf/osx.h

# Install the init file, headers and docs.
install: $(PROG) $(LIB) ici.h
	@echo '=========================================='
	@echo 'Creating installation directories'
	@echo '=========================================='
	[ -d $(BINDIR) ] || mkdir -p $(BINDIR)
	-mkdir -p $(MANDIR)
	-mkdir -p $(INCDIR)
	-mkdir -p $(LIBDIR)
	-mkdir -p $(ICILIBDIR)
	-mkdir -p $(DOCDIR)
	@echo '=========================================='
	@echo 'Installing ici interpreter and manual pages'
	@echo '=========================================='
	$(INSTALL) -m 555 $(PROG) $(BINDIR)
	for f in $(MAN1); do\
	    $(INSTALL) -m 444 $$f $(MANDIR);\
	done
	@echo '=========================================='
	@echo 'Installing ici library'
	@echo '=========================================='
	$(INSTALL) -m 444 $(LIB) $(LIBDIR)
	@echo '=========================================='
	@echo 'Core files'
	@echo '=========================================='
	$(INSTALL) -m 444 ici4core*.ici $(ICILIBDIR)
	@echo '=========================================='
	@echo 'Headers'
	@echo '=========================================='
	$(INSTALL) -m 444 $(ICIHDRS) $(INCDIR)
	@echo '=========================================='
	@echo 'Documentation'
	@echo '=========================================='
	$(INSTALL) -m 444 $(DOCS) $(DOCDIR)
	@echo '=========================================='
	@echo 'Install done'
	@echo '=========================================='

clean:
	rm -f $(PROG) $(LIB) main.o $(ALL_OBJS) ici.h

clobber: clean
	rm -f .depend $(GCH)

depend:
	mkdep $(MKDEP_CFLAGS) $(OBJS:.o=.c) main.c

-include .depend

sstring.o : sstring.h
