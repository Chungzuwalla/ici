/*
 * The is module externs various set objects that are used
 * to test characters against particular character classes.
 * The externed sets have names that mimic C's character
 * classification functions and macros defined in ctype.h
 * but are qualified via ICI's automatic loading.
 *
 * The following sets are defined:
 *
 *      is.upper
 *      is.lower
 *      is.digit
 *      is.alnum
 *      is.alpha
 *      is.space
 *      is.cntrl
 *      is.print
 *      is.punct
 *
 * The sets contain both string and integer values for
 * characters allowing them to be used to classify both
 * string and character code values.
 *
 * When classifying strings it should be remembered to
 * select the character to be classified and not the
 * whole string.
 *
 * The externed sets are read-only atomic sets.
 *
 * This --intro-- forms part of the --ici-is-- documentation.
 */

make_set := [func(start, end) {
    s := set();
    for (c := start; c <= end; ++c) {
	s[c] = true;
	s[tochar(c)] = true;
    }
    return s;
}];

extern space = @[set ' ', " ", '\t', "\t", '\n', "\n", '\r', "\r", '\f', "\f"];
extern cntrl = @make_set(0, 31);
extern print = @make_set(' ', '~');
extern digit = @make_set('0', '9');
extern lower = @make_set('a', 'z');
extern upper = @make_set('A', 'Z');
extern alpha = @(upper + lower);
extern alnum = @(alpha + digit);
extern punct = @(print - (alnum + space));
