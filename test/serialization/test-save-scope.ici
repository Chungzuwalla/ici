local
xdeepcopy(o, ss, depth)
{
    var depth = 0;

    v := k := NULL;
    switch (typeof(o)) {
    case "map":
        if (ss[o]) {
            return NULL;
	}
        ss[o] := 1;
        r := map();
	if (super(o)) {
	    super(r, xdeepcopy(super(o), ss, depth + 1));
	}
        forall (v, k in o) {
            r[xdeepcopy(k, ss, depth + 1)] := xdeepcopy(v, ss, depth + 1);
	}
        return r;

    case "set":
        r := set();
        forall (v, k in o) {
            r[xdeepcopy(k, ss, depth + 1)] := 1;
	}
        return r;

    case "array":
        r := array();
        forall (v in o) {
            push(r, xdeepcopy(v, ss, depth + 1));
	}
        return r;

    default:
	return copy(o);
    }
}

s := xdeepcopy(scope(), set());

local remove_files(s)
{
    if (s) {
        remove_files(super(s));
	forall (v, k in s) {
	    if (typeof(v) == "file") {
		del(s, k);
	    }
	}
    }
}

remove_files(s);

file = fopen(test.data_file(), "w");
save(file, s);
close(file);
